name: Build Local Container & Save

on:
  workflow_dispatch:
    inputs:
      docker_user:
        description: 'docker image owner'
        default: 'pknw1'
      docker_image:
        description: 'docker image and tag'
        default: 'maverick'
      docker_image_tag:
        description: 'docker image tag'
        default: 'latest'
      hostname:
        description: 'docker container hostname'
        default: 'maveriwkcwww'
      hostport:
        description: 'internal container http port'
        default: '80
        '
jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
      - name: create string
        run: |
          TIMESTAMP=$(date)
          echo "![](https://www.pknw1.co.uk/assets/img/pknw1logo-white.png)"  >> $GITHUB_STEP_SUMMARY
          echo "## ${{ github.fullName }} build"  >> $GITHUB_STEP_SUMMARY
          echo "started at "${TIMESTAMP}  >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
      - uses: actions/checkout@v3
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
        with:
          with-owner: 'false'
          string-case: 'lowercase'
      - name: create docker-compose
        run: | 
          cp deploy/docker-compose-orig.yml deploy/docker-compose.yml
          echo " - [X] Create docker-compose.yml" >> $GITHUB_STEP_SUMMARY
          sed -i 's/REPO_NAME/${{ steps.repo-name.outputs.repo-name }}/g' deploy/docker-compose.yml
          sed -i 's/DOCKER_USER/${{ inputs.docker_user }}/g' deploy/docker-compose.yml
          sed -i 's/DOCKER_IMAGE/${{ inputs.docker_image }}/g' deploy/docker-compose.yml
          sed -i 's/DOCKER_IMAGE_TAG/${{ inputs.docker_image_tag }}/g' deploy/docker-compose.yml
          sed -i 's/VIRTUAL_PORT_SED/${{ inputs.hostport }}/g' deploy/docker-compose.yml
          sed -i 's/HOSTNAME/${{ inputs.hostname }}/g' deploy/docker-compose.yml
          echo " - [X] Updated docker-compose.yml" >> $GITHUB_STEP_SUMMARY
      - name: Build and push Docker images
        run: |
          TIMESTAMP=$(date +%s)
          echo ${TIMESTAMP} > build/publish/version.html
          cd build
          docker build -t ${{ docker_user }}/${{ inputs.docker_image }}:${{ docker_image_tag }} .
          IMAGE_SIZE=$(docker image ls | grep ${{ inputs.docker_image }} | grep ${{ inputs.docker_image_tag }} | awk '{print $NF}')
          echo " - [X] Create docker image ${{ docker_user }}/${{ inputs.docker_image }}:${{ docker_image_tag }} - ${IMAGE_SIZE} " >> $GITHUB_STEP_SUMMARY
      - name: export image
        run: |
          docker save -o image.tar ${{ docker_user }}/${{ inputs.docker_image }}:${{ docker_image_tag }}
          echo " - [X] Export docker image ${{ docker_user }}/${{ inputs.docker_image }}:${{ docker_image_tag }} as image.tar " >> $GITHUB_STEP_SUMMARY
      - uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: 'deploy/docker-compose.yml'
      - run: | 
          echo " - [X] attached docker-compose.zip as artifact " >> $GITHUB_STEP_SUMMARY
      - uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: 'image.tar'
      - run: | 
          echo " - [X] attached docker-image.zip as artifact " >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo "extract zip file for docker-compose.yml" >> $GITHUB_STEP_SUMMARY
          echo "extract image.tar from docker-image.zip" >> $GITHUB_STEP_SUMMARY
          echo "import archive using ```docker import image1.tar  ${{ docker_user }}/${{ inputs.docker_image }}:${{ docker_image_tag }} ``` " >> $GITHUB_STEP_SUMMARY
